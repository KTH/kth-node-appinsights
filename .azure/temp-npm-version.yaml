parameters:
  - name: version
    type: string
  - name: nodeVersion
    type: string
    default: ''
  - name: verbose
    type: boolean
    default: false
  - name: dryRun
    type: boolean
    default: false
  - name: pushTags
    type: boolean
    default: true
  - name: workingDir
    type: string
    default: '$(Pipeline.Workspace)/github'

steps:
  - checkout: self
    path: github
    persistCredentials: true
    clean: true
    fetchTags: true
    # fetchDepth: 0

  - script: |
      cd ${{ parameters.workingDir }}
      git config --global user.email "pipeline@kth.se"
      git config --global user.name "Pipeline"
      git fetch --all
      git checkout $BRANCH_NAME
    displayName: git checkout
    env:
      BRANCH_NAME: ${{ replace(variables['Build.SourceBranch'], 'refs/heads/', '') }}

  - ${{ if parameters.nodeVersion }}:
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: ${{ parameters.nodeVersion }}

  - script: npm run build
    displayName: NPM Build

  - task: Npm@1
    displayName: Version NPM Package
    inputs:
      command: custom
      workingDir: ${{ parameters.workingDir }}
      verbose: ${{ parameters.verbose }}
      customCommand: 'version ${{ parameters.version }}'
      publishEndpoint: $(npmServiceConnection)

  - ${{ if eq(parameters.dryRun, false) }}:
      - task: Npm@1
        displayName: Publish NPM Package
        inputs:
          command: 'publish'
          publishRegistry: useExternalRegistry
          publishEndpoint: $(npmServiceConnection)

  - ${{ if eq(parameters.dryRun, false) }}:
      - script: |
          git push origin
        displayName: git push

  - ${{ if and(eq(parameters.pushTags, true), eq(parameters.dryRun, false)) }}:
      - script: |
          git push --tags
        displayName: git push tags
